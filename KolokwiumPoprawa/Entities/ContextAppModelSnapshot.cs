// <auto-generated />
using System;
using KolokwiumPoprawa.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KolokwiumPoprawa.Entities
{
    [DbContext(typeof(ContextApp))]
    partial class ContextAppModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KolokwiumPoprawa.Model.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctor"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("PriceForVisit")
                        .HasColumnType("float");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor")
                        .HasName("Doctor_PK");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            FirstName = "Test",
                            LastName = "Test",
                            PriceForVisit = 123.0,
                            Specialization = "Tstowa"
                        },
                        new
                        {
                            IdDoctor = 2,
                            FirstName = "x",
                            LastName = "d",
                            PriceForVisit = 643.29999999999995,
                            Specialization = "Neuropatia"
                        },
                        new
                        {
                            IdDoctor = 3,
                            FirstName = "Mikołaj",
                            LastName = "Nowy",
                            PriceForVisit = 50.0,
                            Specialization = "Kardio"
                        });
                });

            modelBuilder.Entity("KolokwiumPoprawa.Model.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatient"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient")
                        .HasName("Patient_PK");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Date = new DateTime(2024, 6, 23, 20, 43, 42, 465, DateTimeKind.Local).AddTicks(5126),
                            FirstName = "Ala",
                            LastName = "Ma kota"
                        },
                        new
                        {
                            IdPatient = 2,
                            Date = new DateTime(2024, 6, 23, 20, 43, 42, 474, DateTimeKind.Local).AddTicks(5635),
                            FirstName = "Karol",
                            LastName = "Karo"
                        },
                        new
                        {
                            IdPatient = 3,
                            Date = new DateTime(2024, 6, 23, 20, 43, 42, 474, DateTimeKind.Local).AddTicks(5669),
                            FirstName = "Kamil",
                            LastName = "Bąk"
                        },
                        new
                        {
                            IdPatient = 4,
                            Date = new DateTime(2024, 6, 23, 20, 43, 42, 474, DateTimeKind.Local).AddTicks(5683),
                            FirstName = "Jacob",
                            LastName = "Testowski"
                        });
                });

            modelBuilder.Entity("KolokwiumPoprawa.Model.Schedule", b =>
                {
                    b.Property<int>("IdSchedule")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.HasKey("IdSchedule")
                        .HasName("Schedule_PK");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            IdSchedule = 1,
                            DateFrom = new DateTime(2024, 6, 23, 20, 43, 42, 478, DateTimeKind.Local).AddTicks(9207),
                            DateTo = new DateTime(2024, 6, 23, 20, 43, 42, 478, DateTimeKind.Local).AddTicks(9599),
                            IdDoctor = 1
                        },
                        new
                        {
                            IdSchedule = 2,
                            DateFrom = new DateTime(2024, 6, 23, 20, 43, 42, 478, DateTimeKind.Local).AddTicks(9936),
                            DateTo = new DateTime(2024, 6, 23, 20, 43, 42, 478, DateTimeKind.Local).AddTicks(9956),
                            IdDoctor = 2
                        },
                        new
                        {
                            IdSchedule = 3,
                            DateFrom = new DateTime(2024, 6, 23, 20, 43, 42, 478, DateTimeKind.Local).AddTicks(9970),
                            DateTo = new DateTime(2024, 6, 23, 20, 43, 42, 478, DateTimeKind.Local).AddTicks(9984),
                            IdDoctor = 3
                        });
                });

            modelBuilder.Entity("KolokwiumPoprawa.Model.Visit", b =>
                {
                    b.Property<int>("IdVisit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVisit"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("IdVisit")
                        .HasName("Visit_PK");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Visits");

                    b.HasData(
                        new
                        {
                            IdVisit = 1,
                            Date = new DateTime(2024, 6, 23, 20, 43, 42, 480, DateTimeKind.Local).AddTicks(6106),
                            IdDoctor = 1,
                            IdPatient = 1,
                            Price = 123.2
                        },
                        new
                        {
                            IdVisit = 2,
                            Date = new DateTime(2024, 6, 23, 20, 43, 42, 480, DateTimeKind.Local).AddTicks(7346),
                            IdDoctor = 2,
                            IdPatient = 2,
                            Price = 150.19999999999999
                        },
                        new
                        {
                            IdVisit = 3,
                            Date = new DateTime(2024, 6, 23, 20, 43, 42, 480, DateTimeKind.Local).AddTicks(7369),
                            IdDoctor = 3,
                            IdPatient = 3,
                            Price = 50.200000000000003
                        });
                });

            modelBuilder.Entity("KolokwiumPoprawa.Model.Schedule", b =>
                {
                    b.HasOne("KolokwiumPoprawa.Model.Doctor", "IdDoctorNav")
                        .WithMany("Schedules")
                        .HasForeignKey("IdSchedule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDoctorNav");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Model.Visit", b =>
                {
                    b.HasOne("KolokwiumPoprawa.Model.Doctor", "IdDoctorNav")
                        .WithMany("Visits")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KolokwiumPoprawa.Model.Patient", "IdPatinetNav")
                        .WithMany("Visits")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Patient_Visit_FK");

                    b.Navigation("IdDoctorNav");

                    b.Navigation("IdPatinetNav");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Model.Doctor", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("KolokwiumPoprawa.Model.Patient", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
